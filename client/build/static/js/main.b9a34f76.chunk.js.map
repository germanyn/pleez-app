{"version":3,"sources":["assets/logo.png","index.js","serviceWorker.ts","pages/home.tsx","graphql/queries/categoria.ts","graphql/mutations/categoria.ts","components/modules/categorias/DialogCategoria.tsx","theme.tsx","pages/cardapio.tsx","utils/index.ts","graphql/mutations/produto.ts","components/modules/produtos/DialogProduto.tsx","pages/cardapio/categoria.tsx","shareds/pedido-utils.ts","graphql/queries/pedido.ts","pages/pedidos.tsx","graphql/mutations/pedido.ts","pages/pedido.tsx","utils/regras-de-forms.ts","graphql/mutations/auth.ts","app-history.ts","utils/auth-utils.ts","pages/login.tsx","components/ui/CampoDeCnpj.tsx","components/ui/CampoDeTelefone.tsx","pages/restaurantes/registrar.tsx","pages/restaurante.tsx","rotas.ts","pages/restaurantes/em-breve.tsx","components/core/MainToolbar.tsx","components/core/MainDrawer.tsx","components/core/MainLayout.tsx","plugins/apollo-client.ts","App.tsx","index.tsx"],"names":["module","exports","require","Boolean","window","location","hostname","match","Home","props","Container","maxWidth","Box","my","Typography","variant","component","gutterBottom","OBTER_CATEGORIAS","gql","OBTER_CATEGORIA","CRIAR_CATEGORIA","ATUALIZAR_CATEGORIA","DELETAR_CATEGORIA","TROCAR_PRODUTOS_DA_CATEGORIA","useStyles","makeStyles","theme","createStyles","fab","position","bottom","spacing","right","categoriaInicialDefault","nome","forwardRef","ref","categoriaInicial","React","useState","open","setOpened","categoria","setCategoria","useImperativeHandle","Fragment","cloneElement","children","onClick","Dialog","onClose","aria-labelledby","onSubmit","evento","preventDefault","onConfirma","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","fullWidth","onChange","target","value","DialogActions","Button","color","type","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","mixins","toolbar","minHeight","categorias","width","display","flexDirection","rightIcon","marginLeft","selected","backgroundColor","light","text","contrastText","AdapterLink","innerRef","withTheme","useLocation","classes","history","useHistory","useQuery","loading","data","useMutation","update","cache","criarCategoria","readQuery","query","writeQuery","concat","adicionarCategoria","a","variables","input","push","_id","errors","style","flex","m","className","List","map","ListItem","button","key","to","pathname","ListItemText","size","path","mdiPlus","Divider","orientation","rotas","Object","entries","rota","render","componente","exact","formatarPreco","preco","toLocaleString","currency","maximumFractionDigits","minimumFractionDigits","retirarFormatacaoCpfCnpj","cnpjCpf","replace","CRIAR_PRODUTO","ATUALIZAR_PRODUTO","DELETAR_PRODUTO","produtoInicialDefault","descricao","produtoInicial","opened","produto","setProduto","alert","inputProps","step","multiline","actionButton","paddingTop","paddingBottom","useTheme","useRouteMatch","params","atualizarCategoria","atualizarProduto","deletarCategoria","indexCategoria","findIndex","categoriasAtualizadas","splice","deletarProduto","produtosAtualizados","produtos","indexProduto","criarProduto","trocarOrdemProdutosDaCategoria","cacheData","indiceA","indiceB","categoriaAtualizada","trocarProdutosDaCategoria","handleExcluirCategoria","confirm","categoriaInput","IconButton","marginRight","mdiPencil","Table","TableBody","indice","TableRow","TableCell","whiteSpace","align","overflow","textOverflow","tableLayout","paddingLeft","paddingRight","produtoInput","parseFloat","handleConfirmaEdicaoProduto","toString","handleExcluirProduto","mdiTrashCan","idCategoria","handleSubirProduto","mdiArrowUp","length","handleDescerProduto","mdiArrowDown","textAlign","handleConfirmaAdicionarProduto","situacoesDePedidoDictionary","tipo","proximo","acaoProximo","rejeitar","acaoRejeitar","anterior","situacoesDePedido","situacoesDoAdmin","ordernarPorTipoDeSituacao","pedidoA","pedidoB","indexOf","situacao","OBTER_PEDIDOS","OBTER_PEDIDO","root","IconeDaSituacaoDoPedido","mdiCheckboxBlankCircle","yellow","blue","pedidos","sort","pedido","cliente","ListItemIcon","justifyContent","mx","alignContent","ATUALIZAR_SITUACAO_PEDIDO","atualizarPedido","includes","novaListaPedidos","index","atualizarSituacao","loadingEnvio","ThemeProvider","Card","CardContent","TableHead","itens","item","quantidade","fontWeight","reduce","total","CardActions","novaSituacao","disabled","obrigatorio","valor","cnpjValido","cnpj","isValidCnpj","REGISTRAR_RESTAURANTE","LOGAR_RESTAURANTE","createBrowserHistory","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","logar","restaurante","bloqueado","textField","height","onCompleted","logarRestaurante","Grid","container","justify","xs","sm","md","initialValues","credenciaisIniciais","validateOnBlur","email","senha","setSubmitting","isSubmitting","Toolbar","name","required","validate","message","textDecoration","InputMask","TextMaskCustom","mask","InputProps","inputComponent","slice","registrarRestaurante","restauranteInicial","confirmarSenha","registro","values","autoComplete","CampoDeCnpj","cnpjFormatado","CampoDeTelefone","login","telefone","nomeDoMenu","icone","mdiHome","mdiKey","Login","assign","mdiSquareEditOutline","RegistrarRestaurante","mdiStore","Restaurante","mdiArrowBottomLeft","ListaDePedidos","Pedido","mdiSilverware","EditarCardapio","EditarCategoria","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","hide","menuButton","spacer","flexGrow","rotaAtual","find","startsWith","AppBar","clsx","drawerOpen","aria-label","onOpenDrawer","edge","noWrap","alignItems","breakpoints","up","flexShrink","drawerPapper","drawerClose","overflowX","logoWrapper","padding","logo","maxHeight","itensMenu","Drawer","useMediaQuery","onToggleDrawer","ModalProps","keepMounted","paper","src","alt","mdiChevronLeft","activeclassname","toolbarSpacing","httpLink","HttpLink","uri","authLink","ApolloLink","operation","forward","setContext","headers","authorization","client","ApolloClient","link","InMemoryCache","App","setDrawerOpen","CssBaseline","config","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9a34f76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.266a93dc.png\";","require('./index.tsx');","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport { Typography, Container, Box } from '@material-ui/core';\r\n\r\ninterface Props{}\r\n\r\nconst Home: React.FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <Container maxWidth=\"sm\" >\r\n      <Box my={4}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Home\r\n        </Typography>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home","import gql from 'graphql-tag';\r\n\r\nexport const OBTER_CATEGORIAS = gql`\r\n  query BuscarCategoriasAdmin {\r\n    categorias {\r\n      _id\r\n      nome\r\n    }\r\n  }\r\n`\r\n\r\nexport const OBTER_CATEGORIA = gql`\r\n  query BuscarCategoriaAdmin($id: String!) {\r\n    categoria(id: $id) {\r\n      _id\r\n      nome\r\n      produtos {\r\n        _id\r\n        nome\r\n        preco\r\n        descricao\r\n      }\r\n    }\r\n  }\r\n`\r\n","import gql from 'graphql-tag';\r\n\r\nexport const CRIAR_CATEGORIA = gql`\r\n  mutation CriarCategoria($input: CriarCategoriaInput!) {\r\n    criarCategoria(categoria: $input) {\r\n      _id\r\n      nome\r\n      produtos {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ATUALIZAR_CATEGORIA = gql`\r\n  mutation AtualizarCategoria($id: String!, $categoriaInput: AtualizarCategoriaInput!) {\r\n    atualizarCategoria(id: $id, categoria: $categoriaInput) {\r\n      _id\r\n      nome\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETAR_CATEGORIA = gql`\r\n  mutation DeletarCategoria($id: String!) {\r\n    deletarCategoria(id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nexport const TROCAR_PRODUTOS_DA_CATEGORIA = gql`\r\n  mutation TrocarProdutosDaCategoria($idCategoria: String!, $indiceA: Int!, $indiceB: Int!) {\r\n    trocarOrdemProdutosDaCategoria(idCategoria: $idCategoria, indiceA: $indiceA, indiceB: $indiceB) {\r\n      indiceA\r\n      indiceB\r\n    }\r\n  }\r\n`","import React, { forwardRef, useImperativeHandle } from 'react'\r\nimport Icon from \"@mdi/react\";\r\nimport { Fab, makeStyles, Theme, createStyles, Dialog, DialogTitle, DialogContent, DialogContentText, TextField, DialogActions, Button } from \"@material-ui/core\";\r\nimport theme from \"theme\";\r\nimport { mdiPlus } from \"@mdi/js\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nexport type CategoriaInput = {\r\n  nome: string\r\n}\r\n\r\nexport type Props = {\r\n  children?: any\r\n  onConfirma?: (categoria: CategoriaInput) => void\r\n  categoriaInicial?: CategoriaInput\r\n}\r\n\r\nexport type Ref = {\r\n  setCategoria: React.Dispatch<React.SetStateAction<CategoriaInput>>\r\n  setOpened: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst categoriaInicialDefault = {\r\n  nome: '',\r\n}\r\n\r\nconst DialogCategoria: React.RefForwardingComponent<Ref, Props> = ({\r\n  categoriaInicial = { ...categoriaInicialDefault },\r\n  ...props\r\n}, ref) => {\r\n  const classes = useStyles();\r\n  const [open, setOpened] = React.useState(false);\r\n  const [categoria, setCategoria] = React.useState({...categoriaInicial});\r\n\r\n  const handleClickOpen = () => {\r\n    setCategoria({ ...categoriaInicial })\r\n    setOpened(true);\r\n  };\r\n\r\n  const handleCancelar = () => {\r\n    setOpened(false);\r\n  };\r\n\r\n  const handleConfirma = () => {\r\n    props.onConfirma && props.onConfirma(categoria);\r\n    setOpened(false);\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    setCategoria,\r\n    setOpened,\r\n  }))\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      { React.cloneElement(props.children, {\r\n        onClick: handleClickOpen,\r\n      }) }\r\n      <Dialog\r\n        open={open}\r\n        onClose={ handleCancelar }\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <form onSubmit={(evento)=>{\r\n          evento.preventDefault()\r\n          handleConfirma()\r\n        }}>\r\n          <DialogTitle id=\"form-dialog-title\"> Nova Categoria</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Nome\"\r\n              fullWidth\r\n              onChange={ (evento) => setCategoria({\r\n                ...categoria,\r\n                nome: evento.target.value,\r\n              }) }\r\n              value={ categoria.nome }\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Confirma\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default forwardRef(DialogCategoria)","import red from '@material-ui/core/colors/red';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: 'rgb(194, 12, 12)',\r\n    },\r\n    secondary: {\r\n      main: 'rgb(194, 12, 12)',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 56,\r\n      '@media (min-width:0px) and (orientation: landscape)': {\r\n        minHeight: 48\r\n      },\r\n      '@media (min-width:600px)': {\r\n        minHeight: 64\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;","import React from 'react'\r\nimport {\r\n  Typography,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Button,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport { useQuery, useMutation } from 'react-apollo';\r\nimport { OBTER_CATEGORIAS } from 'graphql/queries/categoria';\r\nimport { CRIAR_CATEGORIA } from 'graphql/mutations/categoria';\r\nimport DialogCategoria, { CategoriaInput } from 'components/modules/categorias/DialogCategoria';\r\nimport { makeStyles, createStyles, withTheme } from '@material-ui/styles';\r\nimport { mdiPlus } from '@mdi/js';\r\nimport Icon from '@mdi/react';\r\nimport theme from 'theme'\r\nimport { Route, RouteProps, Switch, useHistory } from 'react-router';\r\nimport { Rota } from 'rotas';\r\nimport {\r\n  NavLink as RouterLink,\r\n  LinkProps as RouterLinkProps,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\ninterface Props extends RouteProps{\r\n  rotas: {[key:string]: Rota}\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    categorias: {\r\n      width: 240,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    selected: {\r\n      backgroundColor: theme.palette.primary.light,\r\n      text: theme.palette.primary.contrastText,\r\n      \"&:hover\": {\r\n        backgroundColor: red[100],\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\r\n  <RouterLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst Cardapio: React.FunctionComponent<Props> = (props) => {\r\n  const location = useLocation()\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n\r\n  const { loading, data, error } = useQuery<{categorias: Categoria[], errors: any}, any>(OBTER_CATEGORIAS);\r\n  \r\n  const [ criarCategoria ] = useMutation(CRIAR_CATEGORIA, {\r\n    update(cache, { data: { criarCategoria } }) {\r\n      const data = cache.readQuery<{categorias: Categoria[]}>({\r\n        query: OBTER_CATEGORIAS\r\n      });\r\n      if (!data) return\r\n      const { categorias } = data;\r\n      cache.writeQuery({\r\n        query: OBTER_CATEGORIAS,\r\n        data: { categorias: categorias.concat([criarCategoria]) },\r\n      });\r\n    }\r\n  })\r\n\r\n  const adicionarCategoria = async (categoria: CategoriaInput) => { \r\n    const { data } = await criarCategoria({\r\n      variables: {\r\n        input: {\r\n          ...categoria,\r\n        }\r\n      }\r\n    })\r\n    history.push(`/cardapio/categorias/${data.criarCategoria._id}`)\r\n  }\r\n\r\n  if (loading) return <div>Carregando...</div>\r\n  if (error) return <div>{ error }</div>\r\n  if (!data) return <div>Sem dados...</div>\r\n  if (data.errors) return <div>{\r\n    data.errors\r\n  }</div>\r\n  \r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flex: 1,\r\n    }}>\r\n      <Box\r\n        m={1}\r\n        className={ classes.categorias }\r\n      >\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Categorias\r\n        </Typography>\r\n        <List style={{\r\n          flex:1,\r\n        }}>\r\n          {data.categorias.map(categoria=>\r\n            <ListItem\r\n              button\r\n              key={categoria._id}\r\n              component={AdapterLink as any}\r\n              to={`/cardapio/categorias/${categoria._id}`}\r\n              selected={ location.pathname === `/cardapio/categorias/${categoria._id}` }\r\n            >\r\n              <ListItemText\r\n                color=\"primary\"\r\n                primary={categoria.nome}\r\n              />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <DialogCategoria onConfirma={adicionarCategoria}>\r\n          <Button\r\n            fullWidth\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n          >\r\n            Adicionar Categoria\r\n            <Icon\r\n              className={classes.rightIcon}\r\n              path={mdiPlus}\r\n              size={1}\r\n              color={theme.palette.primary.contrastText}\r\n            />\r\n          </Button>\r\n        </DialogCategoria>\r\n      </Box>\r\n      <Divider orientation=\"vertical\" />\r\n      <Switch>\r\n        {props.rotas && Object.entries(props.rotas).map(([key, rota])=>\r\n          <Route\r\n            key={key}\r\n            path={rota.path}\r\n            render={props => (\r\n              <rota.componente\r\n                {...props}\r\n                rotas={rota.path}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n        />\r\n        <Route exact path={props.path}>\r\n          <Box m={1} >\r\n            Selecione uma categoria\r\n          </Box>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTheme(Cardapio)","export const formatarPreco = (preco: number) => preco.toLocaleString('ptBR', {\r\n  currency: 'BRL',\r\n  maximumFractionDigits: 2,\r\n  minimumFractionDigits: 2,\r\n})\r\n\r\nexport const retirarFormatacaoCpfCnpj = (cnpjCpf: string) =>\r\n  cnpjCpf.replace(/-|\\/|\\.\\./g, '')","import gql from 'graphql-tag';\r\n\r\nexport const CRIAR_PRODUTO = gql`\r\n  mutation CriarProduto($produtoInput: CriarProdutoInput!) {\r\n    criarProduto(produto: $produtoInput) {\r\n      _id\r\n      nome\r\n      preco\r\n      descricao\r\n      categoria {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ATUALIZAR_PRODUTO = gql`\r\n  mutation AtualizarProduto($id: String!, $produtoInput: AtualizarProdutoInput!) {\r\n    atualizarProduto(id: $id, produto: $produtoInput) {\r\n      _id\r\n      nome\r\n      descricao\r\n      preco\r\n    }\r\n  }\r\n`\r\n\r\nexport const DELETAR_PRODUTO = gql`\r\n  mutation DeletarProduto($id: String!) {\r\n    deletarProduto(id: $id) {\r\n      _id\r\n      categoria {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`","import React, { useImperativeHandle, forwardRef } from 'react'\r\nimport { makeStyles, Theme, createStyles, Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from \"@material-ui/core\";\r\n\r\nexport type Props = {\r\n  onConfirma?: (produtoInput: Required<ProdutoInput>) => void\r\n  produtoInicial?: ProdutoInput\r\n  children?: React.ReactElement\r\n}\r\n\r\nexport type Ref = {\r\n  setProduto: React.Dispatch<React.SetStateAction<ProdutoInput>>\r\n  setOpened: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nexport type ProdutoInput = {\r\n  nome: string\r\n  preco: string\r\n  descricao: string\r\n}\r\n\r\nconst produtoInicialDefault = {\r\n  nome: '',\r\n  descricao: '',\r\n  preco: '',\r\n}\r\n\r\nconst DialogProduto: React.RefForwardingComponent<Ref, Props> = (\r\n  {\r\n    produtoInicial = {...produtoInicialDefault},\r\n    ...props\r\n  },\r\n  ref,\r\n) => {\r\n  const [opened, setOpened] = React.useState(false);\r\n  const [produto, setProduto] = React.useState<ProdutoInput>({...produtoInicial});\r\n\r\n  const handleClickOpen = () => {\r\n    setProduto({...produtoInicial})\r\n    setOpened(true);\r\n  };\r\n\r\n  useImperativeHandle(ref, ()=>({\r\n    setProduto,\r\n    setOpened,\r\n  }))\r\n\r\n  const handleCancelar = () => {\r\n    setOpened(false);\r\n  };\r\n\r\n  const handleConfirma = () => {\r\n    if(!produto.nome) {\r\n      alert('Informe um Nome')\r\n    }\r\n    if(!produto.preco) {\r\n      alert('Informe um Preço')\r\n    }\r\n    props.onConfirma && props.onConfirma(\r\n      produto as Required<ProdutoInput>\r\n    );\r\n    setOpened(false);\r\n  };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      { props.children && React.cloneElement(props.children, {\r\n        onClick: handleClickOpen,\r\n      }) }\r\n      <Dialog\r\n        open={opened}\r\n        onClose={ handleCancelar }\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <form onSubmit={(evento)=>{\r\n          evento.preventDefault()\r\n          handleConfirma()\r\n        }}>\r\n          <DialogTitle id=\"form-dialog-title\"> Novo Produto</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"Nome\"\r\n              fullWidth\r\n              onChange={ (evento) => setProduto({\r\n                  ...produto,\r\n                  nome: evento.target.value\r\n                })\r\n              }\r\n              value={ produto.nome || '' }\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"Preço\"\r\n              fullWidth\r\n              type=\"number\"\r\n              inputProps={{\r\n                step: \"0.01\"\r\n              }}\r\n              onChange={ (evento) => setProduto({\r\n                  ...produto,\r\n                  preco: evento.target.value,\r\n                })\r\n              }\r\n              value={ produto.preco || '' }\r\n            />\r\n            <TextField\r\n              multiline\r\n              margin=\"dense\"\r\n              label=\"Descricao\"\r\n              fullWidth\r\n              onChange={ (evento) => setProduto({\r\n                  ...produto,\r\n                  descricao: evento.target.value,\r\n                })\r\n              }\r\n              value={ produto.descricao || '' }\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n            >\r\n              Confirma\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default forwardRef(DialogProduto)","import React from 'react'\r\nimport { RouteProps, useRouteMatch, useHistory } from 'react-router'\r\nimport { withTheme, makeStyles, createStyles } from '@material-ui/styles'\r\nimport { Box, Typography, Divider, Table, TableRow, TableCell, IconButton, Theme, useTheme, TableBody, TableFooter, Button } from '@material-ui/core'\r\nimport { useQuery, useMutation } from 'react-apollo'\r\nimport { OBTER_CATEGORIA, OBTER_CATEGORIAS } from 'graphql/queries/categoria'\r\nimport { formatarPreco } from 'utils'\r\nimport Icon from '@mdi/react'\r\nimport { mdiPencil, mdiTrashCan, mdiArrowUp, mdiArrowDown, mdiPlus } from '@mdi/js'\r\nimport DialogCategoria, { CategoriaInput } from 'components/modules/categorias/DialogCategoria'\r\nimport { ATUALIZAR_CATEGORIA, DELETAR_CATEGORIA, TROCAR_PRODUTOS_DA_CATEGORIA } from 'graphql/mutations/categoria'\r\nimport { ATUALIZAR_PRODUTO, DELETAR_PRODUTO, CRIAR_PRODUTO } from 'graphql/mutations/produto'\r\nimport DialogProduto, { ProdutoInput } from 'components/modules/produtos/DialogProduto'\r\nimport rotas from 'rotas'\r\n\r\ninterface Props extends RouteProps{}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    categorias: {\r\n      width: 240,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    actionButton: {\r\n      paddingTop:0,\r\n      paddingBottom:0,\r\n    }\r\n  })\r\n)\r\n\r\nconst Categoria: React.FunctionComponent<Props> = (props) => {\r\n  const classes = useStyles()\r\n  const theme = useTheme()\r\n  const match = useRouteMatch<{id: string}>()\r\n  const history = useHistory()\r\n\r\n  const id = match && match.params.id\r\n\r\n  const {\r\n    data, loading, error,\r\n  } = useQuery<{categoria: Categoria}>(OBTER_CATEGORIA, {\r\n    variables: {\r\n      id,\r\n    },\r\n  })\r\n\r\n  const [ atualizarCategoria ] = useMutation(ATUALIZAR_CATEGORIA)\r\n  const [ atualizarProduto ] = useMutation(ATUALIZAR_PRODUTO)\r\n  \r\n  const [ deletarCategoria ] = useMutation(DELETAR_CATEGORIA, {\r\n    update(cache, { data: { deletarCategoria } }) {\r\n      const data = cache.readQuery<{categorias: Categoria[]}, any>({\r\n        query: OBTER_CATEGORIAS\r\n      })\r\n      if (!data) return\r\n      const { categorias } = data;\r\n\r\n      const indexCategoria = categorias\r\n        .findIndex(({_id}) => _id === deletarCategoria._id)\r\n      if (!~indexCategoria) return\r\n      \r\n      const categoriasAtualizadas = [ ...categorias]\r\n      categoriasAtualizadas.splice(indexCategoria, 1)\r\n\r\n      cache.writeQuery({\r\n        query: OBTER_CATEGORIAS,\r\n        data: {\r\n          categorias: categoriasAtualizadas,\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const [ deletarProduto ] = useMutation(DELETAR_PRODUTO, {\r\n    update(cache, { data: { deletarProduto } }) {\r\n      const data = cache.readQuery<{categoria: Categoria}, any>({\r\n        query: OBTER_CATEGORIA,\r\n        variables: {\r\n          id: deletarProduto.categoria._id,\r\n        },\r\n      })\r\n      if (!data) return\r\n      const { categoria } = data;\r\n\r\n      const produtosAtualizados = [...categoria.produtos]\r\n\r\n      const indexProduto = produtosAtualizados.findIndex((({_id}) => _id === deletarProduto._id ))\r\n      if (!~indexProduto) return\r\n\r\n      produtosAtualizados.splice(indexProduto, 1)\r\n\r\n      cache.writeQuery({\r\n        query: OBTER_CATEGORIA,\r\n        data: {\r\n          categoria: {\r\n            ...categoria,\r\n            produtos: produtosAtualizados,\r\n          },\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const [ criarProduto ] = useMutation(CRIAR_PRODUTO, {\r\n    update(cache, { data: { criarProduto } }) {\r\n      const data = cache.readQuery<{categoria: Categoria}, any>({\r\n        query: OBTER_CATEGORIA,\r\n        variables: {\r\n          id: criarProduto.categoria._id,\r\n        },\r\n      })\r\n      if (!data) return\r\n      const { categoria } = data;\r\n\r\n      cache.writeQuery({\r\n        query: OBTER_CATEGORIA,\r\n        data: {\r\n          categoria: {\r\n            ...categoria,\r\n            produtos: [\r\n              ...categoria.produtos,\r\n              criarProduto\r\n            ]\r\n          },\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const [ trocarProdutosDaCategoria ] = useMutation(TROCAR_PRODUTOS_DA_CATEGORIA, {\r\n    update(cache, { data: { trocarOrdemProdutosDaCategoria } }) {\r\n      if (!data) return\r\n      const cacheData = cache.readQuery<{categoria: Categoria}, any>({\r\n        query: OBTER_CATEGORIA,\r\n        variables: {\r\n          id: data.categoria._id,\r\n        },\r\n      })\r\n      if (!cacheData) return\r\n\r\n      const {\r\n        indiceA,\r\n        indiceB\r\n      } = trocarOrdemProdutosDaCategoria\r\n      \r\n      const categoriaAtualizada = { ...cacheData.categoria }\r\n      ;[ categoriaAtualizada.produtos[indiceA], categoriaAtualizada.produtos[indiceB] ] =\r\n       [ categoriaAtualizada.produtos[indiceB], categoriaAtualizada.produtos[indiceA] ]\r\n\r\n      cache.writeQuery({\r\n        query: OBTER_CATEGORIA,\r\n        data: {\r\n          categoria: categoriaAtualizada,\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  if (loading) return <div>Carregando...</div>\r\n  if (error) return <div>{ error }</div>\r\n  if (!data) return <div>Sem dados...</div>\r\n\r\n  const handleConfirmaEdicaoCategoria = (input: CategoriaInput) => {\r\n    atualizarCategoria({\r\n      variables: {\r\n        id: data.categoria._id,\r\n        categoriaInput: {\r\n          ...input,\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleExcluirCategoria = async () => {\r\n    if(!window.confirm('Deseja mesmo excluir a categoria?')) return\r\n    await deletarCategoria({\r\n      variables: {\r\n        id: data.categoria._id,\r\n      }\r\n    })\r\n    history.push(rotas['editar-cardapios'].path)\r\n  }\r\n\r\n  const handleConfirmaEdicaoProduto = (id: string, input: ProdutoInput) => {\r\n    atualizarProduto({\r\n      variables: {\r\n        id,\r\n        produtoInput: {\r\n          ...input,\r\n          preco: input.preco && parseFloat(input.preco),\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleConfirmaAdicionarProduto = (input: ProdutoInput) => {\r\n    criarProduto({\r\n      variables: {\r\n        produtoInput: {\r\n          ...input,\r\n          preco: input.preco && parseFloat(input.preco),\r\n          categoria: data.categoria._id,\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleExcluirProduto = (id: string) => {\r\n    if(!window.confirm('Deseja mesmo excluir o produto?')) return\r\n    deletarProduto({\r\n      variables: {\r\n        id: id,\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubirProduto = (indice: number) => {\r\n    if (indice <= 0 ) return\r\n    trocarProdutosDaCategoria({\r\n      variables: {\r\n        idCategoria: data.categoria._id,\r\n        indiceA: indice,\r\n        indiceB: indice-1,\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleDescerProduto = (indice: number) => {\r\n    if (indice >= data.categoria.produtos.length + 1 ) return\r\n    trocarProdutosDaCategoria({\r\n      variables: {\r\n        idCategoria: data.categoria._id,\r\n        indiceA: indice,\r\n        indiceB: indice+1,\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      m={1}\r\n      style={{\r\n        display: 'flex',\r\n        flex: 1,\r\n        flexDirection: 'column'\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        <DialogCategoria\r\n          onConfirma={handleConfirmaEdicaoCategoria}\r\n          categoriaInicial={{\r\n            nome: data.categoria.nome,\r\n          }}\r\n        >\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{\r\n              marginRight: theme.spacing(1)\r\n            }}\r\n          >\r\n            <Icon path={mdiPencil} size={1} />\r\n          </IconButton>\r\n        </DialogCategoria>\r\n        { data.categoria.nome }\r\n      </Typography>\r\n      <Divider />\r\n      <div style={{ flex: 1 }}>\r\n        <div>\r\n          <Table>\r\n            <TableBody>\r\n              { data.categoria.produtos.map((produto, indice)=>\r\n                <TableRow key={produto._id}>\r\n                  <TableCell style={{\r\n                    whiteSpace: 'nowrap'\r\n                  }}>\r\n                    { produto.nome }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    { formatarPreco(produto.preco) }\r\n                  </TableCell>\r\n                  <TableCell style={{\r\n                    whiteSpace: 'nowrap',\r\n                    overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                    tableLayout: 'fixed',\r\n                    maxWidth: 0,\r\n                    width: '100%',\r\n                  }}>\r\n                    { produto.descricao || '' }\r\n                  </TableCell>\t\r\n                  <TableCell style={{\r\n                    paddingLeft: 0,\r\n                    paddingRight: 0,\r\n                  }}>\r\n                    <div style={{\r\n                      display: 'flex',\r\n                    }}>\r\n                      <DialogProduto\r\n                        onConfirma={\r\n                          (input)=> handleConfirmaEdicaoProduto(produto._id, input)\r\n                        }\r\n                        produtoInicial={{\r\n                          nome: produto.nome,\r\n                          descricao: produto.descricao || '',\r\n                          preco: produto.preco.toString(),\r\n                        }}\r\n                      >\r\n                        <IconButton size=\"small\">\r\n                          <Icon path={mdiPencil} size={1} />\r\n                        </IconButton>\r\n                      </DialogProduto>\r\n                      <IconButton size=\"small\"\r\n                        onClick={() => handleExcluirProduto(produto._id)}\r\n                      >\r\n                        <Icon path={mdiTrashCan} size={1} />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={()=>handleSubirProduto(indice)}\r\n                      >\r\n                        <Icon path={mdiArrowUp} size={1} />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={()=>handleDescerProduto(indice)}\r\n                      >\r\n                        <Icon path={mdiArrowDown} size={1} />\r\n                      </IconButton>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <div style={{\r\n          textAlign: 'left',\r\n          paddingTop: theme.spacing(2)\r\n        }}>\r\n          <DialogProduto\r\n            onConfirma={\r\n              (input)=> handleConfirmaAdicionarProduto(input)\r\n            }\r\n            >\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              >\r\n              Adicionar Produto\r\n              <Icon\r\n                path={mdiPlus}\r\n                className={classes.rightIcon}\r\n                size={1}\r\n                color={theme.palette.primary.contrastText}\r\n              />\r\n            </Button>\r\n          </DialogProduto>\r\n        </div>\r\n      </div>\r\n      <div style={{\r\n        textAlign: 'right',\r\n      }}>\r\n        <Button\r\n          color=\"primary\"\r\n          onClick={handleExcluirCategoria}\r\n        >\r\n          Excluir Categoria\r\n          <Icon\r\n            path={mdiPlus}\r\n            className={classes.rightIcon}\r\n            size={1}\r\n            color={theme.palette.primary.contrastText}\r\n          />\r\n        </Button>\r\n      </div>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default withTheme(Categoria)","import { TipoSituacaoDoPedido } from './../types/pedido.d';\r\nimport {\r\n  SituacaoDoPedido,\r\n  Pedido,\r\n} from '../types/pedido';\r\n\r\nexport const somarPrecoTotalPedido = (pedido: Pedido) => {\r\n  return pedido.itens.reduce((total, item)=> total + item.produto.preco * item.quantidade, 0)\r\n}\r\n\r\nexport const situacoesDePedidoDictionary: {[tipo: string]: SituacaoDoPedido} = {\r\n  'recebido': {\r\n    tipo: 'recebido',\r\n    descricao: 'Recebido',\r\n    proximo: 'em-preparo',\r\n    acaoProximo: 'Aceitar',\r\n    rejeitar: 'rejeitado',\r\n    acaoRejeitar: 'Rejeitar',\r\n  },\r\n  'em-preparo': {\r\n    tipo: 'em-preparo',\r\n    descricao: 'Em Preparo',\r\n    anterior: 'recebido',\r\n    proximo: 'finalizado',\r\n    acaoProximo: 'Pedido Entregue',\r\n    rejeitar: 'cancelado',\r\n    acaoRejeitar: 'Cancelar o Pedido',\r\n  },\r\n  'finalizado': {\r\n    tipo: 'finalizado',\r\n    anterior: 'em-preparo',\r\n    descricao: 'Finalizado',\r\n  },\r\n  'rejeitado': {\r\n    tipo: 'rejeitado',\r\n    descricao: 'Rejeitado',\r\n  },\r\n  'cancelado': {\r\n    tipo: 'cancelado',\r\n    descricao: 'Cancelado',\r\n  },\r\n}\r\n\r\nexport const situacoesDePedido: SituacaoDoPedido[] = [\r\n  situacoesDePedidoDictionary['recebido'],\r\n  situacoesDePedidoDictionary['em-preparo'],\r\n  situacoesDePedidoDictionary['finalizado'],\r\n]\r\n\r\nexport const situacoesDoAdmin: TipoSituacaoDoPedido[] = [\r\n  'recebido', 'em-preparo', 'finalizado'\r\n]\r\n\r\nexport const ordernarPorTipoDeSituacao = (pedidoA: Pedido, pedidoB: Pedido) => {\r\n  return situacoesDoAdmin.indexOf(pedidoA.situacao) - situacoesDoAdmin.indexOf(pedidoB.situacao)\r\n}","import gql from 'graphql-tag';\r\n\r\nexport const OBTER_PEDIDOS = gql`\r\n  query BuscarPedidosAdmin {\r\n    pedidos(filtros: {\r\n      situacao: [\r\n        \"recebido\",\r\n        \"finalizado\",\r\n        \"em-preparo\"\r\n      ]\r\n    }) {\r\n      _id\r\n      situacao\r\n      cliente {\r\n        nome\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const OBTER_PEDIDO = gql`\r\n  query BuscarPedidoAdmin($id: String!) {\r\n    pedido(id: $id) {\r\n      _id\r\n      situacao\r\n      cliente {\r\n        nome\r\n      }\r\n      itens {\r\n        quantidade\r\n        produto {\r\n          nome\r\n          preco\r\n          descricao\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport {\r\n  Typography,\r\n  Box,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Divider,\r\n  Theme,\r\n  ListItemIcon,\r\n} from '@material-ui/core';\r\nimport { useQuery, useMutation } from 'react-apollo';\r\nimport { makeStyles, createStyles, withTheme } from '@material-ui/styles';\r\nimport Icon from '@mdi/react';\r\nimport theme from 'theme'\r\nimport { Route, RouteProps, Switch, useHistory } from 'react-router';\r\nimport { Rota } from 'rotas';\r\nimport {\r\n  NavLink as RouterLink,\r\n  LinkProps as RouterLinkProps,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport { mdiCheckboxBlankCircle } from '@mdi/js';\r\nimport { red, yellow, blue } from '@material-ui/core/colors';\r\nimport { situacoesDePedido, ordernarPorTipoDeSituacao } from 'shareds/pedido-utils'\r\nimport { Pedido, TipoSituacaoDoPedido } from 'types/pedido'\r\nimport { OBTER_PEDIDOS } from 'graphql/queries/pedido';\r\n\r\ninterface Props extends RouteProps{\r\n  rotas: {[key:string]: Rota}\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 240,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  })\r\n)\r\n\r\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\r\n  <RouterLink innerRef={ref} {...props} />\r\n));\r\n\r\nconst ListaDePedidos: React.FunctionComponent<Props> = (props) => {\r\n  const location = useLocation()\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n\r\n  const { loading, data, error } = useQuery<{pedidos: Pedido[], errors: any}, any>(OBTER_PEDIDOS);\r\n  \r\n  const IconeDaSituacaoDoPedido = (props:{\r\n    situacao: TipoSituacaoDoPedido,\r\n  }) => {\r\n    switch(props.situacao) {\r\n      case 'em-preparo':\r\n        return <Icon\r\n          size={1}\r\n          path={mdiCheckboxBlankCircle}\r\n          color={yellow[500]}\r\n        />\r\n      case 'finalizado':\r\n        return <Icon\r\n          size={1}\r\n          path={mdiCheckboxBlankCircle}\r\n          color={blue[500]}\r\n        />\r\n      default:\r\n        return <Icon\r\n          size={1}\r\n          path={mdiCheckboxBlankCircle}\r\n          color={red[500]}\r\n        />\r\n    }\r\n  }\r\n\r\n  if (loading) return <div>Carregando...</div>\r\n  if (error) return <div>{ error }</div>\r\n  if (!data) return <div>Sem dados...</div>\r\n  if (data.errors) return <div>{\r\n    data.errors\r\n  }</div>\r\n  \r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flex: 1,\r\n    }}>\r\n      <Box\r\n        m={1}\r\n        className={ classes.root }\r\n      >\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Pedidos\r\n        </Typography>\r\n        <List style={{\r\n          flex:1,\r\n        }}>\r\n          {data.pedidos.sort(ordernarPorTipoDeSituacao).map(pedido=>\r\n            <ListItem\r\n              button\r\n              key={pedido._id}\r\n              component={AdapterLink as any}\r\n              to={`/pedidos/${pedido._id}`}\r\n              selected={ location.pathname === `/cardapio/pedidos/${pedido._id}` }\r\n            >\r\n              <ListItemText\r\n                color=\"primary\"\r\n                primary={pedido.cliente.nome}\r\n              />\r\n              <ListItemIcon\r\n                style={{\r\n                  justifyContent: 'flex-end',\r\n                }}\r\n              >\r\n                <IconeDaSituacaoDoPedido\r\n                  situacao={pedido.situacao}\r\n                />\r\n              </ListItemIcon>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <Box mx={1}>\r\n          {\r\n            situacoesDePedido.map((situacao)=>\r\n              <div\r\n                key={situacao.tipo}\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  alignContent: 'space-between',\r\n                }}\r\n              >\r\n                <IconeDaSituacaoDoPedido\r\n                  situacao={situacao.tipo}\r\n                />\r\n                <div style={{ flex: 1, paddingLeft: theme.spacing(1) }}> { situacao.descricao } </div>\r\n              </div>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      <Divider orientation=\"vertical\" />\r\n      <Switch>\r\n        {props.rotas && Object.entries(props.rotas).map(([key, rota])=>\r\n          <Route\r\n            key={key}\r\n            path={rota.path}\r\n            render={props => (\r\n              <rota.componente\r\n                {...props}\r\n                rotas={rota.path}\r\n              />\r\n            )}\r\n          />\r\n        )}\r\n        />\r\n        <Route exact path={props.path}>\r\n          <Box m={1} >\r\n            Selecione um pedido\r\n          </Box>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTheme(ListaDePedidos)","import gql from 'graphql-tag';\r\n\r\nexport const ATUALIZAR_SITUACAO_PEDIDO = gql`\r\n  mutation AtualizarSituacaoPedido(\r\n      $id: String!\r\n      $pedido: AtualizarPedidoInput!\r\n    ) {\r\n    atualizarPedido(id: $id, pedido: $pedido) {\r\n      _id\r\n      situacao\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { RouteProps, useRouteMatch, useHistory } from 'react-router'\r\nimport { withTheme, makeStyles, createStyles, ThemeProvider } from '@material-ui/styles'\r\nimport { Box, Typography, Table, TableRow, TableCell, Theme, useTheme, TableBody, Button, CardContent, Card, TableHead, CardActions } from '@material-ui/core'\r\nimport { formatarPreco } from 'utils'\r\nimport { situacoesDePedidoDictionary, somarPrecoTotalPedido, situacoesDoAdmin } from 'shareds/pedido-utils'\r\nimport { Pedido } from 'types/pedido'\r\nimport { useQuery, useMutation } from 'react-apollo'\r\nimport { OBTER_PEDIDO, OBTER_PEDIDOS } from 'graphql/queries/pedido'\r\nimport { ATUALIZAR_SITUACAO_PEDIDO } from 'graphql/mutations/pedido'\r\n\r\ninterface Props extends RouteProps{}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({})\r\n)\r\n\r\nconst DetalhePedido: React.FunctionComponent<Props> = () => {\r\n  const theme = useTheme()\r\n  const match = useRouteMatch<{id: string}>()\r\n  const history = useHistory()\r\n\r\n  const id = match && match.params.id\r\n\r\n  const {\r\n    data, loading, error,\r\n  } = useQuery<{pedido: Pedido}>(OBTER_PEDIDO, {\r\n    variables: {\r\n      id,\r\n    },\r\n  })\r\n\r\n  const [ atualizarSituacao, {\r\n    loading: loadingEnvio\r\n  } ] = useMutation(ATUALIZAR_SITUACAO_PEDIDO, {\r\n    update(cache, { data: { atualizarPedido } }) {\r\n      const data = cache.readQuery<{pedidos: Pedido[]}>({\r\n        query: OBTER_PEDIDOS\r\n      })\r\n      if (!data) return\r\n\r\n      if (situacoesDoAdmin.includes(atualizarPedido.situacao)) return\r\n\r\n      const novaListaPedidos = [\r\n        ...data.pedidos\r\n      ]\r\n\r\n      const index = novaListaPedidos.findIndex(({_id}) => _id === atualizarPedido._id)\r\n      if(!~index) return\r\n\r\n      novaListaPedidos.splice(index, 1)\r\n\r\n      cache.writeQuery({\r\n        query: OBTER_PEDIDOS,\r\n        data: {\r\n          pedidos: novaListaPedidos\r\n        },\r\n      })\r\n\r\n      history.push('/pedidos')\r\n    }\r\n  })\r\n\r\n  if (loading) return <div>Carregando...</div>\r\n  if (error) return <div>{ error }</div>\r\n  if (!data) return <div>Sem dados...</div>\r\n\r\n  const situacao = situacoesDePedidoDictionary[data.pedido.situacao]\r\n\r\n  const handleAvancarSituacao = () => {\r\n    const novaSituacao = situacao.proximo\r\n    if (!novaSituacao) return\r\n    atualizarSituacao({\r\n      variables: {\r\n        id,\r\n        pedido: {\r\n          situacao: novaSituacao,\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleRejeitarSituacao = () => {\r\n    const novaSituacao = situacao.rejeitar\r\n    if (!novaSituacao) return\r\n    atualizarSituacao({\r\n      variables: {\r\n        id,\r\n        pedido: {\r\n          situacao: novaSituacao,\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Box\r\n        m={1}\r\n        style={{\r\n          display: 'flex',\r\n          flex: 1,\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          { situacao.descricao }\r\n        </Typography>\r\n        <div>\r\n          <Card style={{\r\n            maxWidth: 480\r\n          }}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                { data.pedido.cliente.nome }\r\n              </Typography>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell align=\"right\">\r\n                      Quantidade\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      Nome\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      Preço\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  { data.pedido.itens.map((item, indice)=>\r\n                    <TableRow key={indice}>\r\n                      <TableCell align=\"right\">\r\n                        { item.quantidade }\r\n                      </TableCell>\r\n                      <TableCell style={{ width: '100%' }}>\r\n                        { item.produto.nome }\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        { formatarPreco(item.produto.preco * item.quantidade) }\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  <TableRow>\r\n                    <TableCell/>\r\n                    <TableCell style={{\r\n                      fontWeight: 900,\r\n                    }}>\r\n                      Total\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align=\"right\"\r\n                      style={{\r\n                        fontWeight: 900,\r\n                      }}\r\n                    >\r\n                      { formatarPreco(somarPrecoTotalPedido(data.pedido)) }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n            <CardActions style={{\r\n              justifyContent: 'space-between'\r\n            }}>\r\n              {situacao.acaoRejeitar && <Button\r\n                onClick={handleRejeitarSituacao}\r\n                disabled={loadingEnvio}\r\n              >\r\n              { situacao.acaoRejeitar }\r\n              </Button>}\r\n              {situacao.acaoProximo && <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleAvancarSituacao}\r\n                disabled={loadingEnvio}\r\n              >\r\n                { situacao.acaoProximo }\r\n              </Button>}\r\n            </CardActions>\r\n          </Card>\r\n        </div>\r\n      </Box>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default withTheme(DetalhePedido)","import { isValidCnpj } from '@brazilian-utils/is-valid-cnpj'\r\n\r\nexport const obrigatorio = (valor: any) => !valor && 'Obrigatório'\r\nexport const cnpjValido = (cnpj: string) => !isValidCnpj(cnpj) && 'CNPJ inválido'\r\n","import gql from 'graphql-tag';\r\n\r\nexport const REGISTRAR_RESTAURANTE = gql`\r\n  mutation RegistrarRestaurante($registro: RegistroDeRestaurante) {\r\n    registrarRestaurante(registro: $registro) {\r\n      token\r\n      restaurante {\r\n        _id\r\n        bloqueado\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGAR_RESTAURANTE = gql `\r\n  mutation LogarRestaurante($email: String!, $senha: String!) {\r\n    logarRestaurante(email: $email, senha: $senha) {\r\n      token\r\n      restaurante {\r\n        _id\r\n        bloqueado\r\n      }\r\n    }\r\n  }\r\n`","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();","import history from 'app-history'\r\nimport rotas from \"rotas\"\r\n\r\nexport const TOKEN_REF = 'authToken'\r\n\r\nexport const setAuthToken = (token: string) => localStorage.setItem(TOKEN_REF, token)\r\nexport const getAuthToken = () => localStorage.getItem(TOKEN_REF)\r\nexport const clearAuthToken = () => localStorage.removeItem(TOKEN_REF)\r\nexport const isAuth = () => !!getAuthToken()\r\n\r\ntype LogarParams = {\r\n  token: string,\r\n  restaurante: {\r\n    bloqueado: boolean\r\n    _id: string\r\n  }\r\n}\r\nexport function logar({\r\n  token,\r\n  restaurante: {\r\n    bloqueado\r\n  }\r\n}: LogarParams) {\r\n  if (bloqueado) {\r\n    history.push(rotas['restaurante-bloqueado'].path)\r\n    return\r\n  }\r\n  setAuthToken(token)\r\n  history.push(rotas['editar-cardapios'].path)\r\n}","import * as React from 'react';\r\nimport {\r\n  Card,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  CardActions,\r\n} from '@material-ui/core';\r\nimport {\r\n  TextField,\r\n} from 'formik-material-ui';\r\nimport theme from 'theme'\r\nimport rotas from 'rotas';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { obrigatorio } from 'utils/regras-de-forms';\r\nimport { LOGAR_RESTAURANTE } from 'graphql/mutations/auth';\r\nimport { useMutation } from 'react-apollo';\r\nimport { withTheme, makeStyles } from '@material-ui/styles';\r\nimport { logar } from 'utils/auth-utils';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textField: {\r\n    height: '80px'\r\n  },\r\n}));\r\n\r\nfunction Login(props: Props) {\r\n  const classes = useStyles()\r\n  const [ logarRestaurante, { error } ] = useMutation(LOGAR_RESTAURANTE, {\r\n    onCompleted: ({logarRestaurante}) => {\r\n      logar(logarRestaurante)\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item xs={12} sm={8} md={4}>\r\n          <Formik\r\n            initialValues={credenciaisIniciais}\r\n            validateOnBlur\r\n            onSubmit = { (async({ email, senha }, { setSubmitting }) => {\r\n              try {\r\n                await logarRestaurante({\r\n                  variables: {\r\n                    email,\r\n                    senha,\r\n                  }\r\n                })\r\n              } finally {\r\n                setSubmitting(false)\r\n              }\r\n            })}\r\n          >\r\n            {({ isSubmitting }) => (\r\n              <Form>\r\n                <Card>\r\n                  <Toolbar style={{\r\n                    color: theme.palette.primary.contrastText,\r\n                    backgroundColor: theme.palette.primary.main,\r\n                  }}>\r\n                    <Typography variant=\"h5\">Login</Typography>\r\n                  </Toolbar>\r\n                  <CardContent style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}>\r\n                    <Field\r\n                      className={classes.textField}\r\n                      component={TextField}\r\n                      label=\"E-mail\"\r\n                      name=\"email\"\r\n                      type=\"email\"\r\n                      required\r\n                      validate={obrigatorio}\r\n                    />\r\n                    <Field\r\n                      className={classes.textField}\r\n                      component={TextField}\r\n                      label=\"Senha\"\r\n                      name=\"senha\"\r\n                      type=\"password\"\r\n                      required\r\n                      validate={obrigatorio}\r\n                    />\r\n                  </CardContent>\r\n                  <CardActions >\r\n                    <Button\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      disabled={isSubmitting}\r\n                      type=\"submit\"\r\n                    >\r\n                      Entrar\r\n                    </Button>\r\n                  </CardActions>\r\n                  { error && (<p> { error.message }</p>) }\r\n                  <div style={{\r\n                    margin: theme.spacing(1),\r\n                    textAlign: 'center',\r\n                  }}>\r\n                    <NavLink\r\n                      style={{\r\n                        color: 'grey',\r\n                        textDecoration: 'underline',\r\n                      }}\r\n                      to={rotas[\"registrar-restaurante\"].path}\r\n                    > Ainda não possuo uma conta </NavLink>\r\n                  </div>\r\n                </Card>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTheme(Login)\r\n\r\ntype Props = {\r\n  \r\n};\r\n\r\nconst credenciaisIniciais = {\r\n  email: '',\r\n  senha: '',\r\n}","import * as React from 'react';\r\nimport { TextField } from 'formik-material-ui';\r\nconst InputMask = require(\"react-input-mask\");\r\n\r\ninterface TextMaskCustomProps {\r\n  inputRef: (ref: HTMLInputElement | null) => void;\r\n}\r\n\r\nfunction TextMaskCustom(props: TextMaskCustomProps) {\r\n  return (\r\n    <InputMask\r\n      {...props}\r\n      mask={\"99.999.999/9999-99\"}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function (props: any) {\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      InputProps={{\r\n        inputComponent: TextMaskCustom\r\n      }}\r\n    />\r\n  )\r\n}","import * as React from 'react';\r\nimport { TextField } from 'formik-material-ui';\r\nconst InputMask = require(\"react-input-mask\");\r\n\r\nfunction TextMaskCustom(props: any) {\r\n  return (\r\n    <InputMask\r\n      {...props}\r\n      mask={\r\n        props.value.slice(4,5) >= 6\r\n          ? \"(99)99999-9999\"\r\n          : \"(99)9999-9999\"\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default function (props: any) {\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      InputProps={{\r\n        inputComponent: TextMaskCustom\r\n      }}\r\n    />\r\n  )\r\n}","import * as React from 'react';\r\nimport {\r\n  Card,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  CardContent,\r\n  Grid,\r\n  Button,\r\n  CardActions,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport { withTheme, makeStyles } from '@material-ui/styles';\r\nimport theme from 'theme'\r\nimport rotas from 'rotas';\r\nimport { NavLink } from 'react-router-dom';\r\nimport CampoDeCnpj from 'components/ui/CampoDeCnpj';\r\nimport { useMutation } from 'react-apollo';\r\nimport { REGISTRAR_RESTAURANTE } from 'graphql/mutations/auth'\r\nimport { retirarFormatacaoCpfCnpj } from 'utils';\r\nimport {\r\n  TextField,\r\n} from 'formik-material-ui';\r\nimport {\r\n  Form,\r\n  Field,\r\n  Formik,\r\n} from 'formik';\r\nimport { obrigatorio, cnpjValido } from 'utils/regras-de-forms';\r\nimport { logar } from 'utils/auth-utils';\r\nimport CampoDeTelefone from 'components/ui/CampoDeTelefone';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  textField: {\r\n    height: '80px'\r\n  },\r\n}));\r\n\r\nfunction RegistrarRestaurante(props: Props) {\r\n  const classes = useStyles()\r\n  const [ registrarRestaurante, { error } ] = useMutation(REGISTRAR_RESTAURANTE, {\r\n    onCompleted: ({registrarRestaurante}) => {\r\n      logar(registrarRestaurante)\r\n    },\r\n  })\r\n  \r\n  return (\r\n    <Container>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item xs={12} sm={8} md={6}>\r\n          <Formik\r\n            initialValues={{\r\n              ...restauranteInicial,\r\n              confirmarSenha: '',\r\n            }}\r\n            validateOnBlur\r\n            onSubmit = { (async({\r\n              confirmarSenha,\r\n              ...restaurante\r\n            }, { setSubmitting }) => {\r\n              try {\r\n                await registrarRestaurante({\r\n                  variables: {\r\n                    registro: {\r\n                      ...restaurante,\r\n                      cnpj: retirarFormatacaoCpfCnpj(restaurante.cnpj),\r\n                    }\r\n                  }\r\n                })\r\n              } finally {\r\n                setSubmitting(false)\r\n              }\r\n            })}\r\n          >\r\n            {({ values, isSubmitting }) => (\r\n              <Form autoComplete=\"off\">\r\n                <Card>\r\n                  <Toolbar style={{\r\n                    color: theme.palette.primary.contrastText,\r\n                    backgroundColor: theme.palette.primary.main,\r\n                  }}>\r\n                    <Typography variant=\"h5\">Novo Restaurante</Typography>\r\n                  </Toolbar>\r\n                  <CardContent style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                  }}>\r\n                    <Field\r\n                      autoComplete=\"new-password\"\r\n                      component={TextField}\r\n                      label=\"Nome do Restaurante\"\r\n                      name=\"nome\"\r\n                      type=\"text\"\r\n                      required\r\n                      className={classes.textField}\r\n                      validate={obrigatorio}\r\n                    />\r\n                    <Field\r\n                      autoComplete=\"new-password\"\r\n                      component={CampoDeCnpj}\r\n                      label=\"CNPJ\"\r\n                      name=\"cnpj\"\r\n                      required\r\n                      className={classes.textField}\r\n                      validate={(cnpjFormatado: string) => {\r\n                        const cnpj = cnpjFormatado.replace(/[\\D]/g, '')\r\n                        return obrigatorio(cnpj) || cnpjValido(cnpj)\r\n                      }}  \r\n                    />\r\n                    <Field\r\n                      autoComplete=\"new-password\"\r\n                      component={TextField}\r\n                      label=\"E-mail\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      className={classes.textField}\r\n                      required\r\n                      validate={obrigatorio}\r\n                    />\r\n                    <Field\r\n                      autoComplete=\"new-password\"\r\n                      component={CampoDeTelefone}\r\n                      label=\"Telefone\"\r\n                      type=\"tel\"\r\n                      name=\"telefone\"\r\n                      className={classes.textField}\r\n                      required\r\n                      validate={obrigatorio}\r\n                    />\r\n                    <Field\r\n                      autoComplete=\"new-password\"\r\n                      component={TextField}\r\n                      label=\"Senha\"\r\n                      name=\"senha\"\r\n                      type=\"password\"\r\n                      className={classes.textField}\r\n                      required\r\n                      validate={obrigatorio}\r\n                    />\r\n                    <Field\r\n                      autoComplete=\"new-password\"\r\n                      component={TextField}\r\n                      label=\"Confirmar Senha\"\r\n                      type=\"password\"\r\n                      name=\"confirmarSenha\"\r\n                      className={classes.textField}\r\n                      required\r\n                      validate={ (valor: string) =>\r\n                        obrigatorio(valor) || (\r\n                          valor !== values.senha && 'Senhas não coincidem'\r\n                        )\r\n                      }\r\n                    />\r\n                  </CardContent>\r\n                  <CardActions >\r\n                    <Button\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                      disabled={ isSubmitting }\r\n                    >\r\n                      Registrar\r\n                    </Button>\r\n                    { error && (<p> { error.message }</p>) }\r\n                  </CardActions>\r\n                  <div style={{\r\n                    margin: theme.spacing(1),\r\n                    textAlign: 'center',\r\n                  }}>\r\n                    <NavLink\r\n                      style={{\r\n                        color: 'grey',\r\n                        textDecoration: 'underline',\r\n                      }}\r\n                      to={rotas.login.path}\r\n                    > Já possuo uma conta </NavLink>\r\n                  </div>\r\n                </Card>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTheme(RegistrarRestaurante)\r\n\r\ntype Props = {\r\n  \r\n};\r\n\r\nconst restauranteInicial = {\r\n  email: '',\r\n  nome: '',\r\n  cnpj: '',\r\n  telefone: '',\r\n  senha: '',\r\n}","import React from 'react'\r\nimport { Typography, Container, Box } from '@material-ui/core';\r\n\r\ninterface Props{}\r\n\r\nconst Home: React.FunctionComponent<Props> = (props) => {\r\n  return (\r\n    <Container maxWidth=\"sm\" >\r\n      <Box my={4}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Restaurante\r\n        </Typography>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home","import { mdiHome, mdiKey, mdiAccountGroup, mdiStore, mdiSilverware, mdiArrowBottomLeft, mdiSquareEditOutline } from \"@mdi/js\";\r\nimport Home from 'pages/home';\r\nimport EditarCardapio from \"pages/cardapio\";\r\nimport EditarCategoria from \"pages/cardapio/categoria\";\r\nimport ListaDePedidos from \"pages/pedidos\";\r\nimport Pedido from \"pages/pedido\";\r\nimport Login from \"pages/login\";\r\nimport RegistrarRestaurante from \"pages/restaurantes/registrar\";\r\nimport RestauranteBloqueado from \"pages/restaurantes/em-breve\";\r\nimport Restaurante from \"pages/restaurante\";\r\n\r\nexport default {\r\n  'home': {\r\n    nomeDoMenu: 'Home',\r\n    nome: 'Home',\r\n    icone: mdiHome,\r\n    path: '/',\r\n    componente: Home,\r\n  },\r\n  'login': {\r\n    nomeDoMenu: 'Login',\r\n    nome: 'Login do Restaurante',\r\n    icone: mdiKey,\r\n    path: '/restaurantes/login',\r\n    componente: Login,\r\n  },\r\n  'restaurante-bloqueado': {\r\n    nome: 'Em Breve',\r\n    path: '/restaurantes/em-breve',\r\n    componente: RestauranteBloqueado,\r\n  },\r\n  'registrar-restaurante': {\r\n    nomeDoMenu: 'Cadastrar',\r\n    nome: 'Cadastro de Restaurante',\r\n    icone: mdiSquareEditOutline,\r\n    path: '/restaurantes/registrar',\r\n    componente: RegistrarRestaurante,\r\n  },\r\n  'editar-restaurante': {\r\n    nomeDoMenu: 'Restaurante',\r\n    nome: 'Configurar Restaurante',\r\n    icone: mdiStore,\r\n    path: '/restaurante',\r\n    componente: Restaurante,\r\n  },\r\n  'pedidos': {\r\n    nomeDoMenu: 'Pedidos',\r\n    nome: 'Pedidos',\r\n    icone: mdiArrowBottomLeft,\r\n    path: '/pedidos',\r\n    componente: ListaDePedidos,\r\n    rotas: {\r\n      'pedido': {\r\n        nome: 'DetalhePedido',\r\n        path: '/pedidos/:id',\r\n        componente: Pedido,\r\n      },\r\n    },\r\n  },\r\n  'editar-cardapios': {\r\n    nomeDoMenu: 'Cardápio',\r\n    nome: 'Cardápio',\r\n    icone: mdiSilverware,\r\n    path: '/cardapio',\r\n    componente: EditarCardapio,\r\n    rotas: {\r\n      'editar-categoria': {\r\n        nome: 'EditarCategoria',\r\n        path: '/cardapio/categorias/:id',\r\n        componente: EditarCategoria,\r\n      },\r\n    },\r\n  },\r\n} as {[key:string]: Rota}\r\n\r\nexport type Rota = {\r\n  nomeDoMenu?: string\r\n  nome: string\r\n  path: string\r\n  componente: any\r\n  icone?: string\r\n  rotas?: {[key:string]: Rota}\r\n}","import React from 'react'\r\nimport { Container } from \"@material-ui/core\"\r\nimport rotas from 'rotas'\r\n\r\nexport default function EmBreve () {\r\n  return (\r\n    <Container>\r\n      <h2>EM BREVE</h2>\r\n      <div>Estamos em testes mas ansiosos para trabalhar com você! ; ) </div>\r\n      <div>Caso queira participar ou tirar dúvidas, envie um e-mail para contato@pleez.com.br</div>\r\n      <a onClick={\r\n        ()=>window.location.assign(rotas.login.path)\r\n      }>Voltar para o login.</a>\r\n    </Container>\r\n  )\r\n}","import React from 'react'\r\nimport { AppBar, IconButton, Typography, Toolbar, Theme, Menu, MenuItem } from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { makeStyles, createStyles, withTheme } from '@material-ui/styles';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport clsx from 'clsx';\r\nimport { useRouteMatch, useLocation } from 'react-router';\r\nimport rotas from 'rotas';\r\n\r\n\r\nconst drawerWidth = 240\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    spacer: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n  onOpenDrawer?: () => void\r\n  drawerOpen?: boolean\r\n}\r\n\r\nconst MainToolbar: React.FunctionComponent<Props> = (props) => {\r\n  const classes = useStyles();\r\n  const location = useLocation()\r\n\r\n  const rotaAtual = Object.values(rotas).find(rota=>{\r\n    if (rota.path === '/') return\r\n    return location.pathname.startsWith(rota.path)\r\n  })\r\n  \r\n  return (\r\n    <AppBar className={clsx(classes.appBar, {\r\n      [classes.appBarShift]: props.drawerOpen,\r\n    })}>\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={() => props.onOpenDrawer && props.onOpenDrawer()}\r\n          edge=\"start\"\r\n          className={clsx(classes.menuButton, {\r\n            [classes.hide]: props.drawerOpen,\r\n          })}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap>\r\n          { rotaAtual ? rotaAtual.nome : '' }\r\n        </Typography>\r\n        <div className={classes.spacer} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default withTheme(MainToolbar)","import React from 'react'\r\nimport { makeStyles, createStyles, useTheme, withTheme } from \"@material-ui/styles\";\r\nimport { Drawer, List, ListItem, Divider, ListItemText, Theme, useMediaQuery, ListItemIcon, IconButton } from \"@material-ui/core\";\r\nimport logo from 'assets/logo.png'\r\nimport Icon from '@mdi/react'\r\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\r\nimport rotas from 'rotas';\r\nimport clsx from 'clsx';\r\nimport { mdiChevronLeft } from '@mdi/js';\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    toolbar: {\r\n      ...theme.mixins.toolbar,\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    drawerPapper: {\r\n      // width: drawerWidth,\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    logoWrapper: {\r\n      display: 'flex',\r\n      flex: 1,\r\n      height: theme.mixins.toolbar.minHeight,\r\n      padding: 12,\r\n    },\r\n    logo: {\r\n      maxHeight: '100%',\r\n      maxWidth: '100%',\r\n    }\r\n  }),\r\n);\r\n\r\nconst AdapterLink = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\r\n  <RouterLink innerRef={ref} {...props} />\r\n));\r\n\r\ninterface Props {\r\n  open?: boolean\r\n  onToggleDrawer?: () => void\r\n}\r\n\r\nconst MainDrawer: React.FunctionComponent<Props> = (props) => {\r\n  const theme = useTheme<Theme>()\r\n  const classes = useStyles();\r\n\r\n  const itensMenu = [\r\n    rotas['login'],\r\n    rotas['registrar-restaurante'],\r\n    rotas['home'],\r\n    rotas['pedidos'],\r\n    rotas['editar-cardapios'],\r\n    rotas['editar-restaurante'],\r\n  ]\r\n\r\n  return (\r\n    <nav className={classes.drawer}>\r\n      <Drawer\r\n        variant={ useMediaQuery(theme.breakpoints.up('sm')) ? \"permanent\" : \"temporary\" }\r\n        open={useMediaQuery(theme.breakpoints.up('sm')) || props.open}\r\n        onClose={() => props.onToggleDrawer && props.onToggleDrawer()}\r\n        ModalProps={{\r\n          keepMounted: true,\r\n        }}\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: props.open,\r\n            [classes.drawerClose]: !props.open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <div className={classes.logoWrapper}>\r\n            <img\r\n              src={logo}\r\n              alt=\"Logo\"\r\n              className={classes.logo}\r\n            />\r\n          </div>\r\n          <IconButton\r\n            onClick={() => props.onToggleDrawer && props.onToggleDrawer()}\r\n          >\r\n            <Icon\r\n              path={mdiChevronLeft}\r\n              size={1}\r\n              color={theme.palette.primary.contrastText}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <div>\r\n          <List>\r\n            {itensMenu.map(item => (\r\n              <ListItem\r\n                button\r\n                key={item.nome}\r\n                component={AdapterLink as any}\r\n                to={item.path}\r\n                activeclassname=\"primary\"\r\n              >\r\n                <ListItemIcon>\r\n                  <Icon path={item.icone || ''} size={1} />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.nomeDoMenu} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default withTheme(MainDrawer)","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\"\r\nimport { makeStyles, withTheme, createStyles, Theme } from \"@material-ui/core\";\r\nimport rotas from \"rotas\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      overflowX: \"hidden\",\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flex: 1,\r\n    },\r\n    main: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(3),\r\n      overflowX: \"hidden\",\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flex: 1,\r\n    },\r\n    toolbarSpacing: {\r\n      ...theme.mixins.toolbar,\r\n      flexShrink: 0,\r\n    }\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n  open?: boolean\r\n  onToggleDrawer?: () => void\r\n}\r\n\r\nconst MainLayout: React.FunctionComponent<Props> = (props) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className = {classes.toolbarSpacing} />\r\n      <main className={classes.main}>\r\n        <Switch>\r\n          {Object.entries(rotas).map(([key, rota])=>\r\n            <Route\r\n              key={key}\r\n              exact={!rota.rotas}\r\n              path={rota.path}\r\n              render={props => (\r\n                <rota.componente\r\n                  {...props}\r\n                  rotas={rota.rotas}\r\n                />\r\n              )}\r\n            />\r\n          )}\r\n        </Switch>\r\n      </main>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withTheme(MainLayout)","import { getAuthToken } from './../utils/auth-utils';\r\nimport { ApolloClient, ApolloLink, HttpLink, InMemoryCache } from 'apollo-boost';\r\n\r\nconst httpLink = new HttpLink({ uri: '/graphql' });\r\n\r\nconst authLink = new ApolloLink((operation, forward) => {\r\n  // Retrieve the authorization token from local storage.\r\n  const token = getAuthToken()\r\n\r\n  // Use the setContext method to set the HTTP headers.\r\n  operation.setContext({\r\n    headers: {\r\n      authorization: token ? `Bearer ${token}` : ''\r\n    }\r\n  });\r\n\r\n  // Call the next link in the middleware chain.\r\n  return forward(operation);\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default client","import React from 'react';\nimport MainToolbar from './components/core/MainToolbar';\nimport theme from './theme';\nimport { CssBaseline, Theme } from '@material-ui/core';\nimport { makeStyles, createStyles, ThemeProvider } from '@material-ui/styles';\nimport MainDrawer from './components/core/MainDrawer';\nimport MainLayout from './components/core/MainLayout';\nimport { Router } from 'react-router-dom';\nimport { ApolloProvider } from 'react-apollo';\nimport 'App.css'\nimport client from 'plugins/apollo-client';\nimport history from 'app-history'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      display: 'flex',\n      height: '100vh',\n    },\n  })\n)\n\nconst App = () => {\n  const classes = useStyles()\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  return (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={theme}>\n        <Router history={history}>\n          <CssBaseline />\n          <div className={classes.root}>\n            <MainToolbar\n              drawerOpen={ drawerOpen }\n              onOpenDrawer={() => setDrawerOpen(!drawerOpen)}\n            />\n            <MainDrawer\n              open={ drawerOpen }\n              onToggleDrawer={() => setDrawerOpen(!drawerOpen)}\n            />\n            <MainLayout />\n          </div>\n        </Router>\n      </ThemeProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import { config } from 'dotenv';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nconfig()\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}